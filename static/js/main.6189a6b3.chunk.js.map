{"version":3,"sources":["Components/SearchForm.module.css","Components/Banner.module.css","Components/ResultList.module.css","Components/NavBar.module.css","Components/MovieDetail.module.css","Components/MovieListItem.module.css","Components/MovieList.module.css","Components/MovieItem.module.css","Components/ResultMovieItem.module.css","Components/NavBar.js","Components/Banner.js","Components/MovieItem.js","Components/MovieDetail.js","Components/MovieListItem.js","Components/MovieList.js","pages/browse/Browse.jsx","Components/SearchForm.js","Components/ResultMovieItem.js","Components/ResultList.js","pages/search/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","_useState","useState","_useState2","_slicedToArray","navScrolled","setNavScrolled","window","onscroll","scrollY","React","createElement","className","styles","container","concat","navBarContainer","scrolldown","onClick","location","replace","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","Banner","props","movieName","movieBannerRandom","original_name","movieOverview","overview","backgroundImage","backdrop_path","style","banner","isLoading","loading","movieIntro","MovieItem","_props$moviesingle$ba","movieType","type","id","moviesingle","netflix","src","poster_path","alt","MovieDetail","_props$moviedetail$0$","_props$moviedetail$0$2","_props$moviedetail$0$3","imageBackup","moviedetail","movieDetailContainer","movieDetailContent","original_title","release_date","first_air_date","vote_average","error","movieTrailerFrame","movieTrailer","length","YouTube","videoId","key","opts","height","width","playerVars","autoplay","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","MovieListItem","titleList","movieModaleOpen","setMovieModalOpen","_useState3","_useState4","curMovieID","setCurMovieID","_useState5","_useState6","setMovieTrailer","_useState7","_useState8","setError","movieListArr","getTrailer","_ref","_asyncToGenerator","_callee","movieId","response","data","trailerdata","_context","fetch","ok","json","results","filter","arr","site","t0","message","_x","apply","arguments","listMovieItem","event","target","prevState","map","movie","Number","MovieList","movieList","movieDataArr","index","Browse","setmovieDataArr","setMovieBannerRandom","setIsLoading","API_KEY","requests","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","movieArrTem","getMovieFunction","request","t1","t2","console","log","useEffect","movieArrforBanner","dataarr","Math","floor","random","SearchForm","inputSearch","setInputSearch","searchForm","searchframe","placeholder","onChange","buttons","resetbtn","getDataSearchMovie","searchbtn","ResultMovieItem","_props$moviedata$post","movieItem","moviedata","ResultList","content","displayResult","dataSearch","noMovie","resultList","noList","Search","setDataSearch","_useState9","_useState10","_useState11","_useState12","keywordSearch","_ref2","_callee2","_context2","_x2","closest","classList","contains","App","router","createBrowserRouter","path","element","RouterProvider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6189a6b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchForm_container__3EOy-\",\"searchForm\":\"SearchForm_searchForm__1BivO\",\"searchframe\":\"SearchForm_searchframe__2oihz\",\"buttons\":\"SearchForm_buttons__28nbS\",\"resetbtn\":\"SearchForm_resetbtn__2lpTJ\",\"searchbtn\":\"SearchForm_searchbtn__38L03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Banner_container__3ioW9\",\"banner\":\"Banner_banner__1-rBM\",\"loading\":\"Banner_loading__2dlB_\",\"movieIntro\":\"Banner_movieIntro__1dJG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ResultList_container__109Ze\",\"resultList\":\"ResultList_resultList__1eDUs\",\"noList\":\"ResultList_noList__d4GeW\",\"noMovie\":\"ResultList_noMovie__24tKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NavBar_container__2IrNK\",\"navBarContainer\":\"NavBar_navBarContainer__y-KiX\",\"scrolldown\":\"NavBar_scrolldown__26bGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieDetailContainer\":\"MovieDetail_movieDetailContainer__1BQZn\",\"movieDetailContent\":\"MovieDetail_movieDetailContent__21E0c\",\"movieTrailerFrame\":\"MovieDetail_movieTrailerFrame__2hZ_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieListItem_container__2kTSz\",\"listMovieItem\":\"MovieListItem_listMovieItem__3XyFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieList_container__3aY_W\",\"movieList\":\"MovieList_movieList__StKo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"netflix\":\"MovieItem_netflix__uSl2A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieItem\":\"ResultMovieItem_movieItem__htqji\"};","import React, { useState } from \"react\";\r\nimport styles from \"./NavBar.module.css\";\r\n\r\nconst NavBar = () => {\r\n  //Nếu như sự kiện lăng chuột diễn ra trên page >100px từ đầu page thì navBar sẽ đổi màu dựa trên state navScrolled\r\n  const [navScrolled, setNavScrolled] = useState(false);\r\n  window.onscroll = function () {\r\n    if (window.scrollY > 100) {\r\n      setNavScrolled(true);\r\n    } else {\r\n      setNavScrolled(false);\r\n    }\r\n  };\r\n  //Nếu click vào icon Search sẽ đến trang search và ấn vào MovieApp thì sẽ về trang chủ browse\r\n  const landToSearchHander = () => {\r\n    window.location.replace(\"/search\");\r\n  };\r\n  const landToHomePage = () => {\r\n    window.location.replace(\"/\");\r\n  };\r\n  //JSX trả ra các thẻ div bao bọc và title Movie App cũng như icon Search, nếu navScrolled là true sẽ thêm style ScrollDown để đổi màu navbar\r\n  return (\r\n    <div>\r\n      <div className={styles.container}>\r\n        <div\r\n          className={`${styles.navBarContainer} ${\r\n            navScrolled ? styles.scrolldown : \"\"\r\n          }`}\r\n        >\r\n          <h2 onClick={landToHomePage}>Movie App</h2>\r\n          <svg\r\n            className=\"svg-inline--fa fa-search fa-w-16\"\r\n            fill=\"#ccc\"\r\n            aria-hidden=\"true\"\r\n            data-prefix=\"fas\"\r\n            data-icon=\"search\"\r\n            role=\"img\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 512 512\"\r\n            onClick={landToSearchHander}\r\n          >\r\n            <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport styles from \"./Banner.module.css\";\r\nconst Banner = (props) => {\r\n  //Đặt các giá trị hiện thỉ ở banner, khi chưa có giá trị fetch sẽ là rổng mặc định khi data load xong thì sẽ thành data hiển thị\r\n  //name, overview, background\r\n  const movieName = props.movieBannerRandom\r\n    ? props.movieBannerRandom.original_name\r\n    : \"\";\r\n  const movieOverview = props.movieBannerRandom\r\n    ? props.movieBannerRandom.overview\r\n    : \"\";\r\n  // Background của banner sẽ là màu đen cho đến khi props bannerrandom được truyền xuống sẽ thay bằng backdrop-path\r\n  const backgroundImage = props.movieBannerRandom\r\n    ? `url(https://image.tmdb.org/t/p/original${props.movieBannerRandom.backdrop_path})`\r\n    : \"black\";\r\n  //banner trả ra các thành phần theo như mẫu, thông tin phim, background, các nút bấm, khi chưa load data xong sẽ hiển thị loading\r\n  return (\r\n    <div\r\n      className={styles.container}\r\n      style={{\r\n        backgroundImage: backgroundImage,\r\n      }}\r\n    >\r\n      <div\r\n        className={`${styles.banner} ${props.isLoading ? styles.loading : \"\"}`}\r\n      >\r\n        {props.isLoading ? (\r\n          <h2>Loading...</h2>\r\n        ) : (\r\n          <div className={styles.movieIntro}>\r\n            <h2>{movieName}</h2>\r\n            <button>Play</button>\r\n            <button>My List</button>\r\n            <p>{movieOverview}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport styles from \"./MovieItem.module.css\";\r\nconst MovieItem = (props) => {\r\n  const movieType = props.type;\r\n\r\n  //JSX trả ra giá trị hình ảnh cho từng phim, nếu thuộc tính type của phim là netflix thì sẽ hiển thị poster, còn các thể loại\r\n  //phim khác sẽ hiển thị backdrop, trong trường hợp k có backdrop sẽ lấy poster để hiển thị, nếu k có cả 2 sẽ hiển thị \"ảnh poster not found\"\r\n  return (\r\n    <div>\r\n      <img\r\n        id={props.moviesingle.id}\r\n        className={movieType === \"fetchNetflixOriginals\" ? styles.netflix : \"\"}\r\n        src={\r\n          props.moviesingle.poster_path || props.moviesingle.backdrop_path\r\n            ? `https://image.tmdb.org/t/p/original${\r\n                props.type === \"fetchNetflixOriginals\"\r\n                  ? props.moviesingle.poster_path\r\n                  : props.moviesingle.backdrop_path ??\r\n                    props.moviesingle.poster_path\r\n              }`\r\n            : \"tải xuống.png\"\r\n        }\r\n        alt=\"No picture found\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default MovieItem;\r\n","import React from \"react\";\r\nimport styles from \"./MovieDetail.module.css\";\r\nimport YouTube from \"react-youtube\";\r\nconst MovieDetail = (props) => {\r\n  // Thuộc tính opts để sử dụng element Youtube từ react-youtube\r\n  const opts = {\r\n    height: \"400\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n  // Tạo biến imageBackup sẽ được sử dụng trong trường hợp không có trailer or teaser từ youtube\r\n  const imageBackup =\r\n    props.moviedetail[0].backdrop_path ?? props.moviedetail[0].poster_path;\r\n  // JSX của component này sẽ hiển thị các thông tin chi tiết của bộ phim khi ta click vào, name, title, rate, release date, trailer\r\n  //Nếu như props chứa thông tin trailer truyền xuống có length khác 0 sẽ hiển thị video còn k hiển thị hình ảnh\r\n  //Nếu không có hình ảnh backup sẽ hiển thị ảnh mặc định \"Poster not found\"\r\n  return (\r\n    <div className={styles.movieDetailContainer}>\r\n      <div className={styles.movieDetailContent}>\r\n        <h2>\r\n          {props.moviedetail[0].original_title ??\r\n            props.moviedetail[0].original_name}\r\n        </h2>\r\n        <h4>\r\n          Release Date:{\" \"}\r\n          {props.moviedetail[0].release_date ??\r\n            props.moviedetail[0].first_air_date}\r\n        </h4>\r\n        <h4>Vote: {props.moviedetail[0].vote_average}/10</h4>\r\n        <p>{props.moviedetail[0].overview}</p>\r\n        {props.error && <h3>This film dont have Trailer</h3>}\r\n      </div>\r\n      <div className={styles.movieTrailerFrame}>\r\n        {props.movieTrailer.length !== 0 && props.movieTrailer ? (\r\n          <YouTube videoId={props.movieTrailer.key} opts={opts} />\r\n        ) : (\r\n          <img\r\n            src={\r\n              imageBackup\r\n                ? `https://image.tmdb.org/t/p/original${imageBackup}`\r\n                : \"/tải xuống.png\"\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MovieDetail;\r\n","import React, { useState } from \"react\";\r\nimport MovieItem from \"./MovieItem\";\r\nimport styles from \"./MovieListItem.module.css\";\r\nimport MovieDetail from \"./MovieDetail\";\r\nconst MovieListItem = (props) => {\r\n  //Đắt các state để quản l1y việc hiển thị moviedetail, ID của phim khi được click vào, trailer và error\r\n  const [movieModaleOpen, setMovieModalOpen] = useState(false);\r\n  const [curMovieID, setCurMovieID] = useState(0);\r\n  const [movieTrailer, setMovieTrailer] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  //Đặt tên các thể loại phim theo type lưu từ props movieListArr để hiển thị đề mục từng dòng phim\r\n  let titleList;\r\n  if (props.movieListArr.type === \"fetchNetflixOriginals\") {\r\n    titleList = \"\";\r\n  } else if (props.movieListArr.type === \"fetchTrending\") {\r\n    titleList = \"Xu Hướng\";\r\n  } else if (props.movieListArr.type === \"fetchTopRated\") {\r\n    titleList = \"Xếp hạng cao\";\r\n  } else if (props.movieListArr.type === \"fetchActionMovies\") {\r\n    titleList = \"Hành Động\";\r\n  } else if (props.movieListArr.type === \"fetchComedyMovies\") {\r\n    titleList = \"Hài\";\r\n  } else if (props.movieListArr.type === \"fetchHorrorMovies\") {\r\n    titleList = \"Kinh Dị\";\r\n  } else if (props.movieListArr.type === \"fetchRomanceMovies\") {\r\n    titleList = \"Lãng mạng\";\r\n  } else if (props.movieListArr.type === \"fetchDocumentaries\") {\r\n    titleList = \"Tài liệu\";\r\n  }\r\n  //Xây dựng function lấy trailer của phim\r\n  const getTrailer = async function (movieId) {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=381d90cbe832f9ed337e1407f33d8116`\r\n      );\r\n      //Trong trường hợp API bị lỗi không tồn tại thì báo với user là phim k có trailer\r\n      if (!response.ok) {\r\n        throw new Error(\"This film dont have trailer\");\r\n      }\r\n      const data = await response.json();\r\n      // Lọc ra lấy data trailer theo thứ tự ưu tiên lấy trailer nếu không có mới lấy teaser với site Youtube, nếu không có trả mảng rỗng\r\n      let trailerdata = data.results.filter((arr) => {\r\n        return arr.site === \"YouTube\" && arr.type === \"Trailer\";\r\n      });\r\n      if (trailerdata.length === 0) {\r\n        trailerdata = data.results.filter((arr) => {\r\n          return arr.site === \"YouTube\" && arr.type === \"Teaser\";\r\n        });\r\n      }\r\n      //Nếu trailerdata có giá trị thì lấy giá trị đó để truyền xuống cho movie detail, và set Error thành string rỗng\r\n      //Nếu trailer data không có thì setMovieTrailer thành mảng rỗng  và báo user là không có trailer(Nguồn Youtube không có)\r\n      if (trailerdata[0]) {\r\n        setMovieTrailer(trailerdata[0]);\r\n        setError(\"\");\r\n      } else {\r\n        setMovieTrailer([]);\r\n      }\r\n    } catch (error) {\r\n      setMovieTrailer([]);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  //Xây dựng function khi click vào Movie:  nếu như click vào movie có ID trùng với ID đang mở thì sẽ đóng cửa sổ movieDetail\r\n  // Ngược lại nếu current ID không bằng với ID vừa click thì sẽ mở cửa sổ detail cũng như gọi hàm getTrailer và set ID\r\n  //Có thể mở movieDetail ở multiple thể loại phim, còn nếu\r\n  const chooseMovieHandler = (event) => {\r\n    if (curMovieID === event.target.id) {\r\n      setMovieModalOpen((prevState) => !prevState);\r\n    } else {\r\n      setMovieModalOpen(true);\r\n    }\r\n\r\n    setCurMovieID(event.target.id);\r\n\r\n    getTrailer(event.target.id);\r\n  };\r\n\r\n  //JSX trả ra tên thể loại phim, thẻ div chứa tất cả các phim trong thể loại nằm ngang và dùng scrollbar để hiển thị tất cả\r\n  // phần moviedetail hiển thị theo logic giải thích ở trên\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2>{titleList}</h2>\r\n      <div className={styles.listMovieItem} onClick={chooseMovieHandler}>\r\n        {props.movieListArr.data.results.map((movie) => (\r\n          <MovieItem\r\n            key={movie.id}\r\n            type={props.movieListArr.type}\r\n            moviesingle={movie}\r\n          />\r\n        ))}\r\n      </div>\r\n      {movieModaleOpen && curMovieID && (\r\n        <MovieDetail\r\n          movieTrailer={movieTrailer}\r\n          error={error}\r\n          moviedetail={props.movieListArr.data.results.filter((movie) => {\r\n            return movie.id === Number(curMovieID);\r\n          })}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default MovieListItem;\r\n","import React from \"react\";\r\nimport MovieListItem from \"./MovieListItem\";\r\nimport styles from \"./MovieList.module.css\";\r\nconst MovieList = (props) => {\r\n  //JSX trả ra các list movie, vì trong props. movieDataArr fetch từ trang chủ browse có 1 API search không dùng đến nên slice array từ 0 đến -1\r\n  //Map các phần tử array thành các list phim rồi truyền data xuống MovieListItem\r\n  return (\r\n    <div className={styles.container}>\r\n      {\r\n        <div className={styles.movieList}>\r\n          {props.movieDataArr.slice(0, -1).map((movieListArr, index) => {\r\n            return (\r\n              <MovieListItem\r\n                key={index + 1}\r\n                movieListArr={movieListArr}\r\n                isLoading={props.isLoading}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default MovieList;\r\n","import React, { useEffect, useState } from \"react\";\nimport NavBar from \"../../Components/NavBar\";\nimport Banner from \"../../Components/Banner.js\";\nimport MovieList from \"../../Components/MovieList\";\nfunction Browse() {\n  //Các state để quản lý data movie Array, banner random và trạng thái loading\n  const [movieDataArr, setmovieDataArr] = useState([]);\n  const [movieBannerRandom, setMovieBannerRandom] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  //API key\n  const API_KEY = \"381d90cbe832f9ed337e1407f33d8116\";\n  //quản lý các api bằng object\n  const requests = {\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n    fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\n  };\n  //Khai báo array rổng để sau khi fetching sẽ push các data của từng thể loại phim vào\n  const movieArrTem = [];\n  //Hàm để fetching data các thể loại phim bằng vòng lặp for trong object\n  //Bắt đầu fetching thì trạng thái loading và true và kết thúc sẽ là false để hiển thị Loading... cho người dùng\n  const getMovieFunction = async function () {\n    setIsLoading(true);\n    try {\n      for (const request in requests) {\n        const response = await fetch(\n          `https://api.themoviedb.org/3${requests[request]}`\n        );\n        if (!response.ok) {\n          throw new Error(\"This film is not available\");\n        }\n        const data = await response.json();\n        movieArrTem.push({ type: request, data: data });\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n    setmovieDataArr(movieArrTem);\n    setIsLoading(false);\n  };\n  //Sử dụng useEffect cho hàm gọi data movie khi load vào trang web\n  useEffect(() => {\n    getMovieFunction();\n  }, []);\n  //Lọc ra mảng chứa data sử dụng cho phần banner và  Lấy random 1 movie cho banner\n  useEffect(() => {\n    const movieArrforBanner = movieDataArr.filter(\n      (dataarr) => dataarr.type === \"fetchNetflixOriginals\"\n    );\n    if (movieArrforBanner.length !== 0) {\n      setMovieBannerRandom(\n        movieArrforBanner[0].data.results[\n          Math.floor(\n            Math.random() * movieArrforBanner[0].data.results.length - 1\n          )\n        ]\n      );\n    }\n  }, [movieDataArr]);\n  //Thành phần JSX trang chủ gồm có Navbar, banner và Movielist chứa các list thể loại phim\n  return (\n    <div className=\"app\">\n      <NavBar />\n      <Banner movieBannerRandom={movieBannerRandom} isLoading={isLoading} />\n      <MovieList movieDataArr={movieDataArr} isLoading={isLoading} />\n    </div>\n  );\n}\n\nexport default Browse;\n","import React, { useState } from \"react\";\r\nimport styles from \"./SearchForm.module.css\";\r\nconst SearchForm = (props) => {\r\n  //Khai báo state quản lý giá trị input\r\n  const [inputSearch, setInputSearch] = useState(\"\");\r\n  //Hàm để quản lý việc thay đổi giá trị input của người dùng\r\n  const inputMovieChangeHandler = (event) => {\r\n    setInputSearch(event.target.value);\r\n  };\r\n  //Hàm để lift up state input keyword search của người dùng lên cho trang search chính Search,js khi người dùng nhấn search\r\n  const searchMovieHandler = () => {\r\n    props.getDataSearchMovie(inputSearch);\r\n  };\r\n  //Hàm reset data: lift up string rỗng lên cho hàm getDataSearch ở trang chủ và xóa input người dùng\r\n  const resetHandler = (event) => {\r\n    props.getDataSearchMovie(\"\");\r\n    setInputSearch(\"\");\r\n  };\r\n  //JSX trả ra các element html của form search gồm input người dùng, icon search, nút search và nút reset\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.searchForm}>\r\n        <form className={styles.searchframe}>\r\n          <input\r\n            value={inputSearch}\r\n            placeholder=\"Search your movie\"\r\n            onChange={inputMovieChangeHandler}\r\n          ></input>\r\n          <svg\r\n            className=\"svg-inline--fa fa-search fa-w-16\"\r\n            fill=\"#ccc\"\r\n            aria-hidden=\"true\"\r\n            data-prefix=\"fas\"\r\n            data-icon=\"search\"\r\n            role=\"img\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 512 512\"\r\n          >\r\n            <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n          </svg>\r\n        </form>\r\n        <div className={styles.buttons}>\r\n          <button className={styles.resetbtn} onClick={resetHandler}>\r\n            RESET\r\n          </button>\r\n          <button className={styles.searchbtn} onClick={searchMovieHandler}>\r\n            SEARCH\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport styles from \"./ResultMovieItem.module.css\";\r\nconst ResultMovieItem = (props) => {\r\n  //JSX trả ra ảnh từng bộ phim tìm thấy được, thứ tự sử dụng: poster (nếu có) > backdrop (nếu có)\r\n  //Nếu phim đã quá cũ sẽ không có bất kỳ hình ảnh nào sẽ hiển thị ảnh poster not found\r\n  return (\r\n    <img\r\n      className={styles.movieItem}\r\n      id={props.moviedata.id}\r\n      src={\r\n        props.moviedata.poster_path || props.moviedata.backdrop_path\r\n          ? `https://image.tmdb.org/t/p/original${\r\n              props.moviedata.poster_path ?? props.moviedata.backdrop_path\r\n            }`\r\n          : \"/tải xuống.png\"\r\n      }\r\n      alt=\"No Any picture Found for this movie\"\r\n    />\r\n  );\r\n};\r\nexport default ResultMovieItem;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./ResultList.module.css\";\r\nimport ResultMovieItem from \"./ResultMovieItem\";\r\nimport MovieDetail from \"./MovieDetail\";\r\nconst ResultList = (props) => {\r\n  //Hiển thị nội dung chung của result List nếu có lỗi và nếu không có movie tìm thấy\r\n  let content = \"No movie found, please input the right keyword for searching\";\r\n  if (props.error) {\r\n    content = props.error;\r\n  }\r\n  //Hiển thị nội dung loading khi đang fetching data search\r\n  if (props.isLoading) {\r\n    content = \"Loading...\";\r\n  }\r\n\r\n  //Nếu như kết kết quả tìm kiếm truyền xuống để render là array khác rổng thì display list phim còn không thì hiển thị message không có phim\r\n  const displayResult =\r\n    props.dataSearch.length > 0 ? (\r\n      props.dataSearch.map((movie, i) => (\r\n        <ResultMovieItem key={i + 1} moviedata={movie}></ResultMovieItem>\r\n      ))\r\n    ) : (\r\n      <p className={styles.noMovie}>{content}</p>\r\n    );\r\n  //JSX trả ra tiêu đề kết quả search, và list các phim tìm thấy được\r\n  // nếu như không có data phim nào tìm được thì sẽ hiển thị message yêu cầu nhập keyword đúng\r\n  // Và phần moviedetail khi người dùng nhấn vào phim bất kỳ\r\n  return (\r\n    <div className={`${styles.container} movieCheck`}>\r\n      <h2>Search Result</h2>\r\n      <div\r\n        className={` ${styles.resultList}\r\n          ${!props.dataSearch.length && styles.noList}`}\r\n      >\r\n        {displayResult}\r\n      </div>\r\n      {props.movieModaleOpen && props.curMovieID && (\r\n        <MovieDetail\r\n          movieTrailer={props.movieTrailer}\r\n          error={props.error}\r\n          moviedetail={props.dataSearch.filter((movie) => {\r\n            return movie.id === Number(props.curMovieID);\r\n          })}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ResultList;\r\n","import React, { useState } from \"react\";\nimport NavBar from \"../../Components/NavBar\";\nimport SearchForm from \"../../Components/SearchForm\";\nimport ResultList from \"../../Components/ResultList\";\nimport \"./Search.css\";\nconst Search = () => {\n  //Khai báo các state để quản lý trạng thái, data, error, đóng mở movieDetail, ID movie, trailer ở trang Search,\n  const [dataSearch, setDataSearch] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movieModaleOpen, setMovieModalOpen] = useState(false);\n  const [curMovieID, setCurMovieID] = useState(0);\n  const [movieTrailer, setMovieTrailer] = useState([]);\n  //Hàm để lấy data search dựa trên keywordSearch được lift state từ trang SearchForm\n  //Nếu keyword là rỗng thì trả ra data search là array rỗng, còn nếu lỗi thì sẽ trả ra lỗi cho người dùng\n  //Trạng thái Loading hiển thị loading khi bắt đầu search và khi kết thúc search\n  const getDataSearchMovie = async (keywordSearch) => {\n    setIsLoading((prevState) => true);\n    if (keywordSearch === \"\") {\n      setDataSearch([]);\n    }\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=381d90cbe832f9ed337e1407f33d8116&language=en&query=${keywordSearch}`\n      );\n      if (!response.ok) {\n        throw new Error(\n          \"Something Went Wrong, Please refresh the page and research again!\"\n        );\n      }\n      const data = await response.json();\n      setDataSearch(data.results);\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n    }\n\n    setIsLoading((prevState) => false);\n  };\n  //Xây dựng function lấy trailer của phim\n  const getTrailer = async function (movieId) {\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=381d90cbe832f9ed337e1407f33d8116`\n      );\n      //Trong trường hợp API bị lỗi không tồn tại thì báo với user là phim k có trailer\n      if (!response.ok) {\n        throw new Error(\"This film dont have trailer\");\n      }\n      const data = await response.json();\n      // Lọc ra lấy data trailer theo thứ tự ưu tiên lấy trailer nếu không có mới lấy teaser với site Youtube, nếu không có trả mảng rỗng\n\n      let trailerdata = data.results.filter((arr) => {\n        return arr.site === \"YouTube\" && arr.type === \"Trailer\";\n      });\n      if (trailerdata.length === 0) {\n        trailerdata = data.results.filter((arr) => {\n          return arr.site === \"YouTube\" && arr.type === \"Teaser\";\n        });\n      }\n      //Nếu trailerdata có giá trị thì lấy giá trị đó để truyền xuống cho movie detail, và set Error thành string rỗng\n      //Nếu trailer data không có thì setMovieTrailer thành mảng rỗng  và báo user là không có trailer(Nguồn Youtube không có)\n      if (trailerdata[0]) {\n        setMovieTrailer(trailerdata[0]);\n        setError(\"\");\n      } else {\n        setError(\"This film dont have trailer\");\n        setMovieTrailer([]);\n      }\n    } catch (error) {\n      setMovieTrailer([]);\n      setError(error.message);\n    }\n  };\n  //Xây dựng function khi click vào Movie:  nếu như click vào movie có ID trùng với ID đang mở thì sẽ đóng cửa sổ movieDetail\n  // Ngược lại nếu current ID không bằng với ID vừa click thì sẽ mở cửa sổ detail cũng như gọi hàm getTrailer và set ID\n  //Có thể mở movieDetail ở multiple thể loại phim, còn nếu\n  const chooseMovieHandler = (event) => {\n    if (\n      event.target.closest(\".movieCheck\") &&\n      event.target.closest(\".movieCheck\").classList.contains(\"movieCheck\")\n    ) {\n      if (curMovieID) {\n        setMovieModalOpen(true);\n      }\n      if (event.target.id) {\n        setMovieModalOpen(true);\n        getTrailer(event.target.id);\n        setCurMovieID(event.target.id);\n      }\n      if (curMovieID === event.target.id) {\n        setMovieModalOpen((prevState) => !prevState);\n      }\n    } else {\n      setMovieModalOpen(false);\n    }\n  };\n  //JSX trang search sẽ trả ra data NavBar, SearchFrom và ResultList\n  return (\n    <div className=\"app\" onClick={chooseMovieHandler}>\n      <NavBar />\n      <SearchForm getDataSearchMovie={getDataSearchMovie} />\n      <ResultList\n        dataSearch={dataSearch}\n        isLoading={isLoading}\n        error={error}\n        movieModaleOpen={movieModaleOpen}\n        curMovieID={curMovieID}\n        movieTrailer={movieTrailer}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\n\nimport Browse from \"./pages/browse/Browse\";\nimport Search from \"./pages/search/Search\";\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <Browse></Browse>,\n    },\n    {\n      path: \"/search\",\n      element: <Search></Search>,\n    },\n  ]);\n  return <RouterProvider router={router}></RouterProvider>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}